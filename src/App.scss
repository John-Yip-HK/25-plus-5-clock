@import "../node_modules/bootstrap/scss/functions";

@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/root";

@mixin setTimerDimension($timer-width-height: 70vmin) {
  width: $timer-width-height;
  height: $timer-width-height;
}

@mixin transition() {
  transition-property: background-color, border-color, color;
  transition-duration: 0.3s;
}

@mixin setTheme($dark: false) {
  @if $dark {
    background-color: $gray-900;
    color: $gray-100;

    #timer {
      border-color: $gray-800;

      #time-left {
        font-weight: 600;
      }
    }

    #settings-container .btn,
    #button-container .btn {
      color: $gray-200;
    }
  } @else {
    background-color: $gray-200;
    color: $gray-900;

    #timer {
      border-color: $gray-300;

      #time-left {
        font-weight: 700;
      }
    }

    #settings-container .btn,
    #button-container .btn {
      color: $black;
    }
  }

  #timer.run {
    border-color: $orange;
  }
}

body {
  @include setTheme();
  @include transition();
}

body.dark {
  @include setTheme(true);
}

#root {
  min-height: 100vh;
  min-width: 200px;

  display: flex;
  align-items: center;

  font-size: 5vmin;
}

#timer {
  @include setTimerDimension();
  @include transition();

  text-align: center;
  margin: 1em 0;
  padding: 0.5em 1em;

  border-width: 0.3em;
  border-style: solid;
  border-radius: 50%;

  transition-timing-function: ease-out;

  #time-left {
    font-size: 400%;
  }
}

.btn {
  @include transition();

  font-size: 1.2em;
  font-weight: 600;
}

#settings-container {
  & > div.row {
    margin: 0;
    padding: 0;
  }

  div[class*="-wrapper"] {
    text-align: center;
    padding: 0;

    h2 {
      margin: 0;
    }

    .adjust-row {
      margin: 0.5em 0;

      .time-window-value-col {
        width: 20vmin;

        .time-window-value {
          font-size: 2em;
          font-weight: 600;
        }
      }

      .btn {
        background-color: transparent;
        border-color: transparent;
        box-shadow: none;
      }

      .btn:hover,
      .btn:focus {
        color: $orange;
      }
    }
  }
}

#button-container {
  button {
    margin: 0.3em 0;

    border: none;
    box-shadow: none;

    font-size: 1.5em;

    &:hover,
    &:focus {
      background-color: transparent;
    }

    &#start_stop:hover,
    &#start_stop:focus {
      color: $orange;
    }

    &#reset:hover,
    &#reset:focus {
      color: $red;
    }

    * {
      pointer-events: none;
    }
  }
}

@include media-breakpoint-up(sm) {
  @media only screen and (min-aspect-ratio: 2) and (orientation: landscape) and (hover: none) {
    #timer {
      @include setTimerDimension(80vmin);

      #time-left {
        font-size: 3em;
      }
    }
  }
}

@include media-breakpoint-up(md) {
  #root {
    font-size: 3vmin;
  }

  #timer {
    @include setTimerDimension(40vw);

    #time-left {
      font-size: 350%;
    }
  }

  .time-window-value-col {
    width: 15vmin;
  }

  @media only screen and (min-aspect-ratio: 2) and (orientation: landscape) and (hover: none) {
    #root {
      font-size: 5vmin;
    }

    .time-window-value-col {
      width: 20vmin;
    }
  }
}

@include media-breakpoint-up(lg) {
  #timer {
    @include setTimerDimension(50vmin);
  }
}
